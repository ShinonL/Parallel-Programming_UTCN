perfect_numbers(1, []).
perfect_numbers(X, [X|R]):- 
    check_perfect(X, 1, 0),
    Next is X - 1,
    perfect_numbers(Next, R).
perfect_numbers(X, R) :- Next is X - 1, perfect_numbers(Next, R).

check_perfect(X, X, Sum) :- X = Sum.
check_perfect(X, Divisor, Sum) :- 
    X \= Divisor,
    0 is mod(X, Divisor),
    NextDivisor is Divisor + 1,
    NewSum is Sum + Divisor,
    check_perfect(X, NextDivisor, NewSum).
check_perfect(X, Divisor, Sum) :-
    X \= Divisor,
    NextDivisor is Divisor + 1,
    check_perfect(X, NextDivisor, Sum).

/*
 * ?- perfect_numbers(70, R)
 * R = [66, 60, 56, 54, 48, 42, 40, 36, 30, 28, 24, 20, 18, 12, 6]
 * 
 * ?- perfect_numbers(700, R)
 * R = [700, 696, 690, 684, 680, 678, 672, 666, 660, 654, 650, 648, 644, 642, 640, 636, 630, 624, 620, 618,
 * 		616, 612, 608, 606, 600, 594, 588, 582, 580, 576, 572, 570, 564, 560, 558, 552, 550, 546, 544, 540, 
 * 		534, 532, 528, 522, 520, 516, 510, 504, 500, 498, 496, 492, 490, 486, 480, 476, 474, 468, 464, 462, 
 * 		460, 456, 450, 448, 444, 440, 438, 432, 426, 420, 416, 414, 408, 402, 400, 396, 392, 390, 384, 380, 
 * 		378, 372, 368, 366, 364, 360, 354, 352, 350, 348, 342, 340, 336, 330, 324, 320, 318, 312, 308, 306, 
 * 		304, 300, 294, 288, 282, 280, 276, 272, 270, 264, 260, 258, 252, 246, 240, 234, 228, 224, 222, 220,
 * 		216, 210, 208, 204, 200, 198, 196, 192, 186, 180, 176, 174, 168, 162, 160, 156, 150, 144, 140, 138, 
 * 		132, 126, 120, 114, 112, 108, 104, 102, 100, 96, 90, 88, 84, 80, 78, 72, 66, 60, 56, 54, 48, 42, 40, 
 * 		36, 30, 28, 24, 20, 18, 12, 6 ]
 * 
 * ?- get_time(T0), perfect_numbers(200, R), get_time(T1), Time is T1 - T0
 * R = [ 200, 198, 196, 192, 186, 180, 176, 174, 168, 162, 160, 156, 150, 144, 140, 138, 132, 126, 120, 114, 
 * 		112, 108, 104, 102, 100, 96, 90, 88, 84, 80, 78, 72, 66, 60, 56, 54, 48, 42, 40, 36, 30, 28, 24, 20, 
 * 		18, 12, 6],
 * T0 = 1678638542.36774,
 * T1 = 1678638543.44094,
 * Time = 1.073199987411499
 * 
 * ?- get_time(T0), perfect_numbers(700, R), get_time(T1), Time is T1 - T0.
 * R = [700, 696, 690, 684, 680, 678, 672, 666, 660, 654, 650, 648, 644, 642, 640, 636, 630, 624, 620, 618,
 * 		616, 612, 608, 606, 600, 594, 588, 582, 580, 576, 572, 570, 564, 560, 558, 552, 550, 546, 544, 540, 
 * 		534, 532, 528, 522, 520, 516, 510, 504, 500, 498, 496, 492, 490, 486, 480, 476, 474, 468, 464, 462, 
 * 		460, 456, 450, 448, 444, 440, 438, 432, 426, 420, 416, 414, 408, 402, 400, 396, 392, 390, 384, 380, 
 * 		378, 372, 368, 366, 364, 360, 354, 352, 350, 348, 342, 340, 336, 330, 324, 320, 318, 312, 308, 306, 
 * 		304, 300, 294, 288, 282, 280, 276, 272, 270, 264, 260, 258, 252, 246, 240, 234, 228, 224, 222, 220,
 * 		216, 210, 208, 204, 200, 198, 196, 192, 186, 180, 176, 174, 168, 162, 160, 156, 150, 144, 140, 138, 
 * 		132, 126, 120, 114, 112, 108, 104, 102, 100, 96, 90, 88, 84, 80, 78, 72, 66, 60, 56, 54, 48, 42, 40, 
 * 		36, 30, 28, 24, 20, 18, 12, 6 ]
 * T0 = 1678638642.34204,
 * T1 = 1678638726.26592,
 * Time = 83.92387986183167
 * */